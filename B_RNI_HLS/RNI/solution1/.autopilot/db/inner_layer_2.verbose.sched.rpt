

================================================================
== Vitis HLS Report for 'inner_layer_2'
================================================================
* Date:           Tue Nov 26 16:00:51 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        RNI
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.309 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+-----------+-----+---------+---------+
    |  Latency (cycles) |  Latency (absolute)  |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max    | min |   max   |   Type  |
    +---------+---------+----------+-----------+-----+---------+---------+
    |      484|  8388964|  4.840 us|  83.890 ms|  484|  8388964|       no|
    +---------+---------+----------+-----------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+-------------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) |  Iteration  |  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |   Latency   |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+-------------+-----------+-----------+------+----------+
        |- NEURONS_LOOP_2  |      416|  8388896|  13 ~ 262153|          -|          -|    32|        no|
        +------------------+---------+---------+-------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 13 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 2 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%neuron_index = alloca i32 1"   --->   Operation 14 'alloca' 'neuron_index' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln105 = store i7 64, i7 %neuron_index" [src/RNI.cpp:105]   --->   Operation 15 'store' 'store_ln105' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln105 = br void %for.body" [src/RNI.cpp:105]   --->   Operation 16 'br' 'br_ln105' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%neuron_index_3 = load i7 %neuron_index"   --->   Operation 17 'load' 'neuron_index_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.87ns)   --->   "%icmp_ln105 = icmp_eq  i7 %neuron_index_3, i7 96" [src/RNI.cpp:105]   --->   Operation 18 'icmp' 'icmp_ln105' <Predicate = true> <Delay = 1.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln105 = br i1 %icmp_ln105, void %for.body.split_ifconv, void %for.inc.i.preheader" [src/RNI.cpp:105]   --->   Operation 19 'br' 'br_ln105' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln105 = sext i7 %neuron_index_3" [src/RNI.cpp:105]   --->   Operation 20 'sext' 'sext_ln105' <Predicate = (!icmp_ln105)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i8 %sext_ln105" [src/RNI.cpp:105]   --->   Operation 21 'zext' 'zext_ln105' <Predicate = (!icmp_ln105)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%NEURONS_MEMBRANE_addr = getelementptr i16 %NEURONS_MEMBRANE, i64 0, i64 %zext_ln105" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 22 'getelementptr' 'NEURONS_MEMBRANE_addr' <Predicate = (!icmp_ln105)> <Delay = 0.00>
ST_2 : Operation 23 [2/2] (3.25ns)   --->   "%NEURONS_MEMBRANE_load = load i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 23 'load' 'NEURONS_MEMBRANE_load' <Predicate = (!icmp_ln105)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>
ST_2 : Operation 24 [2/2] (0.00ns)   --->   "%call_ln0 = call void @inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP, i1 %NEURONS_STATE"   --->   Operation 24 'call' 'call_ln0' <Predicate = (icmp_ln105)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 25 [1/2] (3.25ns)   --->   "%NEURONS_MEMBRANE_load = load i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 25 'load' 'NEURONS_MEMBRANE_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>

State 4 <SV = 3> <Delay = 5.58>
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%sext_ln171 = sext i16 %NEURONS_MEMBRANE_load" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 26 'sext' 'sext_ln171' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (5.58ns)   --->   "%mul_ln171 = mul i33 %sext_ln171, i33 59296" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 27 'mul' 'mul_ln171' <Predicate = true> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i33.i32, i33 %mul_ln171, i32 32" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 28 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%leaked_membrane = partselect i16 @_ssdm_op_PartSelect.i16.i33.i32.i32, i33 %mul_ln171, i32 16, i32 31" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 29 'partselect' 'leaked_membrane' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_18 = bitselect i1 @_ssdm_op_BitSelect.i1.i33.i32, i33 %mul_ln171, i32 31" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 30 'bitselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i33.i32, i33 %mul_ln171, i32 15" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 31 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_21 = bitselect i1 @_ssdm_op_BitSelect.i1.i33.i32, i33 %mul_ln171, i32 32" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 32 'bitselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%BIASES_addr = getelementptr i8 %BIASES, i64 0, i64 %zext_ln105" [src/RNI.cpp:108]   --->   Operation 33 'getelementptr' 'BIASES_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [2/2] (3.25ns)   --->   "%BIASES_load = load i8 %BIASES_addr" [src/RNI.cpp:108]   --->   Operation 34 'load' 'BIASES_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 243> <ROM>

State 5 <SV = 4> <Delay = 5.81>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln171 = zext i1 %tmp_19" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 35 'zext' 'zext_ln171' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (2.07ns)   --->   "%leaked_membrane_5 = add i16 %zext_ln171, i16 %leaked_membrane" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 36 'add' 'leaked_membrane_5' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_20 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %leaked_membrane_5, i32 15" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 37 'bitselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node or_ln171_3)   --->   "%xor_ln171 = xor i1 %tmp_20, i1 1" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 38 'xor' 'xor_ln171' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node or_ln171_3)   --->   "%and_ln171 = and i1 %tmp_18, i1 %xor_ln171" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 39 'and' 'and_ln171' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node or_ln171_6)   --->   "%xor_ln171_12 = xor i1 %tmp_18, i1 1" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 40 'xor' 'xor_ln171_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 41 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln171_6 = or i1 %tmp_20, i1 %xor_ln171_12" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 41 'or' 'or_ln171_6' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_13)   --->   "%xor_ln171_13 = xor i1 %tmp_21, i1 %or_ln171_6" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 42 'xor' 'xor_ln171_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_14)   --->   "%tmp_22 = bitselect i1 @_ssdm_op_BitSelect.i1.i33.i32, i33 %mul_ln171, i32 32" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 43 'bitselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_14)   --->   "%xor_ln171_15 = xor i1 %tmp_22, i1 1" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 44 'xor' 'xor_ln171_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_14)   --->   "%or_ln171_8 = or i1 %or_ln171_6, i1 %xor_ln171_15" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 45 'or' 'or_ln171_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_14)   --->   "%and_ln171_11 = and i1 %tmp_21, i1 %or_ln171_8" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 46 'and' 'and_ln171_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node or_ln171_3)   --->   "%and_ln171_12 = and i1 %and_ln171, i1 %tmp_21" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 47 'and' 'and_ln171_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_13)   --->   "%xor_ln171_10 = xor i1 %xor_ln171_13, i1 1" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 48 'xor' 'xor_ln171_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_13)   --->   "%or_ln171 = or i1 %tmp_20, i1 %xor_ln171_10" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 49 'or' 'or_ln171' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node and_ln171_13)   --->   "%xor_ln171_11 = xor i1 %tmp, i1 1" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 50 'xor' 'xor_ln171_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln171_13 = and i1 %or_ln171, i1 %xor_ln171_11" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 51 'and' 'and_ln171_13' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln171_14 = and i1 %tmp_20, i1 %and_ln171_11" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 52 'and' 'and_ln171_14' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node or_ln171_3)   --->   "%or_ln171_7 = or i1 %and_ln171_12, i1 %and_ln171_14" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 53 'or' 'or_ln171_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node or_ln171_3)   --->   "%xor_ln171_14 = xor i1 %or_ln171_7, i1 1" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 54 'xor' 'xor_ln171_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node or_ln171_3)   --->   "%and_ln171_15 = and i1 %tmp, i1 %xor_ln171_14" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 55 'and' 'and_ln171_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node leaked_membrane_6)   --->   "%select_ln171 = select i1 %and_ln171_13, i16 32767, i16 32768" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 56 'select' 'select_ln171' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln171_3 = or i1 %and_ln171_13, i1 %and_ln171_15" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 57 'or' 'or_ln171_3' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.80ns) (out node of the LUT)   --->   "%leaked_membrane_6 = select i1 %or_ln171_3, i16 %select_ln171, i16 %leaked_membrane_5" [src/RNI.cpp:171->src/RNI.cpp:107]   --->   Operation 58 'select' 'leaked_membrane_6' <Predicate = true> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 59 [1/2] (3.25ns)   --->   "%BIASES_load = load i8 %BIASES_addr" [src/RNI.cpp:108]   --->   Operation 59 'load' 'BIASES_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 243> <ROM>

State 6 <SV = 5> <Delay = 5.33>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%speclooptripcount_ln105 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 32, i64 32, i64 32" [src/RNI.cpp:105]   --->   Operation 60 'speclooptripcount' 'speclooptripcount_ln105' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%specloopname_ln105 = specloopname void @_ssdm_op_SpecLoopName, void @empty_20" [src/RNI.cpp:105]   --->   Operation 61 'specloopname' 'specloopname_ln105' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%sext_ln108 = sext i16 %leaked_membrane_6" [src/RNI.cpp:108]   --->   Operation 62 'sext' 'sext_ln108' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln108_1 = sext i8 %BIASES_load" [src/RNI.cpp:108]   --->   Operation 63 'sext' 'sext_ln108_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%sext_ln108_2 = sext i8 %BIASES_load" [src/RNI.cpp:108]   --->   Operation 64 'sext' 'sext_ln108_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (2.07ns)   --->   "%add_ln108 = add i17 %sext_ln108, i17 %sext_ln108_1" [src/RNI.cpp:108]   --->   Operation 65 'add' 'add_ln108' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_23 = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %add_ln108, i32 16" [src/RNI.cpp:108]   --->   Operation 66 'bitselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (2.07ns)   --->   "%add_ln108_1 = add i16 %leaked_membrane_6, i16 %sext_ln108_2" [src/RNI.cpp:108]   --->   Operation 67 'add' 'add_ln108_1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (3.25ns)   --->   "%store_ln108 = store i16 %add_ln108_1, i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:108]   --->   Operation 68 'store' 'store_ln108' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_24 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %add_ln108_1, i32 15" [src/RNI.cpp:108]   --->   Operation 69 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node and_ln108)   --->   "%xor_ln108 = xor i1 %tmp_23, i1 1" [src/RNI.cpp:108]   --->   Operation 70 'xor' 'xor_ln108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 71 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln108 = and i1 %tmp_24, i1 %xor_ln108" [src/RNI.cpp:108]   --->   Operation 71 'and' 'and_ln108' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node and_ln108_1)   --->   "%xor_ln108_1 = xor i1 %tmp_24, i1 1" [src/RNI.cpp:108]   --->   Operation 72 'xor' 'xor_ln108_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln108_1 = and i1 %tmp_23, i1 %xor_ln108_1" [src/RNI.cpp:108]   --->   Operation 73 'and' 'and_ln108_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.97ns)   --->   "%xor_ln108_2 = xor i1 %tmp_23, i1 %tmp_24" [src/RNI.cpp:108]   --->   Operation 74 'xor' 'xor_ln108_2' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln108 = br i1 %xor_ln108_2, void %WEIGHTS_LOOP_2, void %if.end.i.i.i246" [src/RNI.cpp:108]   --->   Operation 75 'br' 'br_ln108' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%br_ln108 = br i1 %and_ln108, void %if.else.i.i.i258, void %if.then2.i.i.i257" [src/RNI.cpp:108]   --->   Operation 76 'br' 'br_ln108' <Predicate = (xor_ln108_2)> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln108 = br i1 %and_ln108_1, void %if.end15.i.i.i265, void %if.then9.i.i.i264" [src/RNI.cpp:108]   --->   Operation 77 'br' 'br_ln108' <Predicate = (xor_ln108_2 & !and_ln108)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 5.12>
ST_7 : Operation 78 [1/1] (3.25ns)   --->   "%store_ln108 = store i16 32768, i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:108]   --->   Operation 78 'store' 'store_ln108' <Predicate = (xor_ln108_2 & !and_ln108 & and_ln108_1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln108 = br void %if.end15.i.i.i265" [src/RNI.cpp:108]   --->   Operation 79 'br' 'br_ln108' <Predicate = (xor_ln108_2 & !and_ln108 & and_ln108_1)> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln108 = br void %WEIGHTS_LOOP_2" [src/RNI.cpp:108]   --->   Operation 80 'br' 'br_ln108' <Predicate = (xor_ln108_2 & !and_ln108)> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (3.25ns)   --->   "%store_ln108 = store i16 32767, i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:108]   --->   Operation 81 'store' 'store_ln108' <Predicate = (xor_ln108_2 & and_ln108)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln108 = br void %WEIGHTS_LOOP_2" [src/RNI.cpp:108]   --->   Operation 82 'br' 'br_ln108' <Predicate = (xor_ln108_2 & and_ln108)> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (0.00ns)   --->   "%WEIGHTS_INDEX_addr = getelementptr i14 %WEIGHTS_INDEX, i64 0, i64 %zext_ln105" [src/RNI.cpp:110]   --->   Operation 83 'getelementptr' 'WEIGHTS_INDEX_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 84 [2/2] (3.25ns)   --->   "%weight_index = load i8 %WEIGHTS_INDEX_addr" [src/RNI.cpp:110]   --->   Operation 84 'load' 'weight_index' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 14> <Depth = 244> <ROM>
ST_7 : Operation 85 [1/1] (1.87ns)   --->   "%add_i_i156 = add i7 %neuron_index_3, i7 1"   --->   Operation 85 'add' 'add_i_i156' <Predicate = true> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%conv_i133_cast_cast = sext i7 %add_i_i156"   --->   Operation 86 'sext' 'conv_i133_cast_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%conv_i133_cast_cast_cast = zext i8 %conv_i133_cast_cast"   --->   Operation 87 'zext' 'conv_i133_cast_cast_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%WEIGHTS_INDEX_addr_3 = getelementptr i14 %WEIGHTS_INDEX, i64 0, i64 %conv_i133_cast_cast_cast"   --->   Operation 88 'getelementptr' 'WEIGHTS_INDEX_addr_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [2/2] (3.25ns)   --->   "%WEIGHTS_INDEX_load = load i8 %WEIGHTS_INDEX_addr_3"   --->   Operation 89 'load' 'WEIGHTS_INDEX_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 14> <Depth = 244> <ROM>

State 8 <SV = 7> <Delay = 4.84>
ST_8 : Operation 90 [1/2] (3.25ns)   --->   "%weight_index = load i8 %WEIGHTS_INDEX_addr" [src/RNI.cpp:110]   --->   Operation 90 'load' 'weight_index' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 14> <Depth = 244> <ROM>
ST_8 : Operation 91 [1/2] (3.25ns)   --->   "%WEIGHTS_INDEX_load = load i8 %WEIGHTS_INDEX_addr_3"   --->   Operation 91 'load' 'WEIGHTS_INDEX_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 14> <Depth = 244> <ROM>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln110 = trunc i14 %weight_index" [src/RNI.cpp:110]   --->   Operation 92 'trunc' 'trunc_ln110' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 93 [2/2] (1.58ns)   --->   "%call_ln110 = call void @inner_layer_2_Pipeline_WEIGHTS_LOOP_2, i14 %weight_index, i7 %neuron_index_3, i14 %WEIGHTS_INDEX_load, i8 %trunc_ln110, i1 %NEURONS_STATE, i16 %NEURONS_MEMBRANE, i8 %WEIGHTS" [src/RNI.cpp:110]   --->   Operation 93 'call' 'call_ln110' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 94 [1/2] (0.00ns)   --->   "%call_ln110 = call void @inner_layer_2_Pipeline_WEIGHTS_LOOP_2, i14 %weight_index, i7 %neuron_index_3, i14 %WEIGHTS_INDEX_load, i8 %trunc_ln110, i1 %NEURONS_STATE, i16 %NEURONS_MEMBRANE, i8 %WEIGHTS" [src/RNI.cpp:110]   --->   Operation 94 'call' 'call_ln110' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 3.25>
ST_10 : Operation 95 [2/2] (3.25ns)   --->   "%NEURONS_MEMBRANE_load_3 = load i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:178->src/RNI.cpp:119]   --->   Operation 95 'load' 'NEURONS_MEMBRANE_load_3' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>

State 11 <SV = 10> <Delay = 5.33>
ST_11 : Operation 96 [1/2] (3.25ns)   --->   "%NEURONS_MEMBRANE_load_3 = load i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:178->src/RNI.cpp:119]   --->   Operation 96 'load' 'NEURONS_MEMBRANE_load_3' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>
ST_11 : Operation 97 [1/1] (2.07ns)   --->   "%icmp_ln178 = icmp_sgt  i16 %NEURONS_MEMBRANE_load_3, i16 126" [src/RNI.cpp:178->src/RNI.cpp:119]   --->   Operation 97 'icmp' 'icmp_ln178' <Predicate = true> <Delay = 2.07> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 98 [1/1] (0.00ns)   --->   "%br_ln178 = br i1 %icmp_ln178, void %_Z34update_neuron_state_reset_membrane7ap_uintILi16EES0_.exit, void %if.then.i" [src/RNI.cpp:178->src/RNI.cpp:119]   --->   Operation 98 'br' 'br_ln178' <Predicate = true> <Delay = 0.00>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 99 [1/1] (0.00ns)   --->   "%NEURONS_STATE_addr = getelementptr i1 %NEURONS_STATE, i64 0, i64 %zext_ln105" [src/RNI.cpp:180->src/RNI.cpp:119]   --->   Operation 99 'getelementptr' 'NEURONS_STATE_addr' <Predicate = (icmp_ln178)> <Delay = 0.00>
ST_12 : Operation 100 [1/1] (2.32ns)   --->   "%store_ln180 = store i1 1, i8 %NEURONS_STATE_addr" [src/RNI.cpp:180->src/RNI.cpp:119]   --->   Operation 100 'store' 'store_ln180' <Predicate = (icmp_ln178)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 243> <RAM>
ST_12 : Operation 101 [1/1] (3.25ns)   --->   "%store_ln181 = store i16 0, i8 %NEURONS_MEMBRANE_addr" [src/RNI.cpp:181->src/RNI.cpp:119]   --->   Operation 101 'store' 'store_ln181' <Predicate = (icmp_ln178)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 243> <RAM>
ST_12 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln182 = br void %_Z34update_neuron_state_reset_membrane7ap_uintILi16EES0_.exit" [src/RNI.cpp:182->src/RNI.cpp:119]   --->   Operation 102 'br' 'br_ln182' <Predicate = (icmp_ln178)> <Delay = 0.00>
ST_12 : Operation 103 [1/1] (1.58ns)   --->   "%store_ln105 = store i7 %add_i_i156, i7 %neuron_index" [src/RNI.cpp:105]   --->   Operation 103 'store' 'store_ln105' <Predicate = true> <Delay = 1.58>
ST_12 : Operation 104 [1/1] (0.00ns)   --->   "%br_ln105 = br void %for.body" [src/RNI.cpp:105]   --->   Operation 104 'br' 'br_ln105' <Predicate = true> <Delay = 0.00>

State 13 <SV = 2> <Delay = 0.00>
ST_13 : Operation 105 [1/2] (0.00ns)   --->   "%call_ln0 = call void @inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP, i1 %NEURONS_STATE"   --->   Operation 105 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 106 [1/1] (0.00ns)   --->   "%ret_ln122 = ret" [src/RNI.cpp:122]   --->   Operation 106 'ret' 'ret_ln122' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation ('neuron_index') [6]  (0.000 ns)
	'store' operation ('store_ln105', src/RNI.cpp:105) of constant 64 on local variable 'neuron_index' [7]  (1.588 ns)

 <State 2>: 3.254ns
The critical path consists of the following:
	'load' operation ('neuron_index') on local variable 'neuron_index' [10]  (0.000 ns)
	'getelementptr' operation ('NEURONS_MEMBRANE_addr', src/RNI.cpp:171->src/RNI.cpp:107) [18]  (0.000 ns)
	'load' operation ('NEURONS_MEMBRANE_load', src/RNI.cpp:171->src/RNI.cpp:107) on array 'NEURONS_MEMBRANE' [19]  (3.254 ns)

 <State 3>: 3.254ns
The critical path consists of the following:
	'load' operation ('NEURONS_MEMBRANE_load', src/RNI.cpp:171->src/RNI.cpp:107) on array 'NEURONS_MEMBRANE' [19]  (3.254 ns)

 <State 4>: 5.587ns
The critical path consists of the following:
	'mul' operation ('mul_ln171', src/RNI.cpp:171->src/RNI.cpp:107) [21]  (5.587 ns)

 <State 5>: 5.816ns
The critical path consists of the following:
	'add' operation ('leaked_membrane', src/RNI.cpp:171->src/RNI.cpp:107) [27]  (2.077 ns)
	'or' operation ('or_ln171_6', src/RNI.cpp:171->src/RNI.cpp:107) [33]  (0.978 ns)
	'or' operation ('or_ln171_8', src/RNI.cpp:171->src/RNI.cpp:107) [37]  (0.000 ns)
	'and' operation ('and_ln171_11', src/RNI.cpp:171->src/RNI.cpp:107) [38]  (0.000 ns)
	'and' operation ('and_ln171_14', src/RNI.cpp:171->src/RNI.cpp:107) [44]  (0.978 ns)
	'or' operation ('or_ln171_7', src/RNI.cpp:171->src/RNI.cpp:107) [45]  (0.000 ns)
	'xor' operation ('xor_ln171_14', src/RNI.cpp:171->src/RNI.cpp:107) [46]  (0.000 ns)
	'and' operation ('and_ln171_15', src/RNI.cpp:171->src/RNI.cpp:107) [47]  (0.000 ns)
	'or' operation ('or_ln171_3', src/RNI.cpp:171->src/RNI.cpp:107) [49]  (0.978 ns)
	'select' operation ('leaked_membrane', src/RNI.cpp:171->src/RNI.cpp:107) [50]  (0.805 ns)

 <State 6>: 5.331ns
The critical path consists of the following:
	'add' operation ('add_ln108_1', src/RNI.cpp:108) [58]  (2.077 ns)
	'store' operation ('store_ln108', src/RNI.cpp:108) of variable 'add_ln108_1', src/RNI.cpp:108 on array 'NEURONS_MEMBRANE' [59]  (3.254 ns)

 <State 7>: 5.124ns
The critical path consists of the following:
	'add' operation ('add_i_i156') [82]  (1.870 ns)
	'getelementptr' operation ('WEIGHTS_INDEX_addr_3') [85]  (0.000 ns)
	'load' operation ('WEIGHTS_INDEX_load') on array 'WEIGHTS_INDEX' [86]  (3.254 ns)

 <State 8>: 4.842ns
The critical path consists of the following:
	'load' operation ('weight_index', src/RNI.cpp:110) on array 'WEIGHTS_INDEX' [81]  (3.254 ns)
	'call' operation ('call_ln110', src/RNI.cpp:110) to 'inner_layer_2_Pipeline_WEIGHTS_LOOP_2' [88]  (1.588 ns)

 <State 9>: 0.000ns
The critical path consists of the following:

 <State 10>: 3.254ns
The critical path consists of the following:
	'load' operation ('NEURONS_MEMBRANE_load_3', src/RNI.cpp:178->src/RNI.cpp:119) on array 'NEURONS_MEMBRANE' [89]  (3.254 ns)

 <State 11>: 5.331ns
The critical path consists of the following:
	'load' operation ('NEURONS_MEMBRANE_load_3', src/RNI.cpp:178->src/RNI.cpp:119) on array 'NEURONS_MEMBRANE' [89]  (3.254 ns)
	'icmp' operation ('icmp_ln178', src/RNI.cpp:178->src/RNI.cpp:119) [90]  (2.077 ns)

 <State 12>: 3.254ns
The critical path consists of the following:
	'store' operation ('store_ln181', src/RNI.cpp:181->src/RNI.cpp:119) of constant 0 on array 'NEURONS_MEMBRANE' [95]  (3.254 ns)

 <State 13>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
