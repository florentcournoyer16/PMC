

================================================================
== Vitis HLS Report for 'input_layer_Pipeline_NEURON_LEAK_LOOP'
================================================================
* Date:           Mon Oct 28 16:02:32 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        RNI
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.988 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4|  40.000 ns|  40.000 ns|    4|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- NEURON_LEAK_LOOP  |        2|        2|         2|          1|          1|     2|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.98>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%membrane_leak_accumulator = alloca i32 1"   --->   Operation 5 'alloca' 'membrane_leak_accumulator' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%beta_index = alloca i32 1"   --->   Operation 6 'alloca' 'beta_index' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%NEURONS_MEMBRANE_load_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %NEURONS_MEMBRANE_load"   --->   Operation 7 'read' 'NEURONS_MEMBRANE_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (1.58ns)   --->   "%store_ln0 = store i2 1, i2 %beta_index"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 9 [1/1] (1.58ns)   --->   "%store_ln0 = store i16 0, i16 %membrane_leak_accumulator"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc.i"   --->   Operation 10 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%beta_index_2 = load i2 %beta_index" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 11 'load' 'beta_index_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 12 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.56ns)   --->   "%icmp_ln152 = icmp_eq  i2 %beta_index_2, i2 3" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 13 'icmp' 'icmp_ln152' <Predicate = true> <Delay = 1.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2"   --->   Operation 14 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln152 = br i1 %icmp_ln152, void %for.inc.i.split, void %_Z11leak_neuron6ap_intILi16EES0_.exit.exitStub" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 15 'br' 'br_ln152' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln153 = zext i2 %beta_index_2" [src/RNI.cpp:153->src/RNI.cpp:59]   --->   Operation 16 'zext' 'zext_ln153' <Predicate = (!icmp_ln152)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (3.98ns)   --->   "%ashr_ln153 = ashr i16 %NEURONS_MEMBRANE_load_read, i16 %zext_ln153" [src/RNI.cpp:153->src/RNI.cpp:59]   --->   Operation 17 'ashr' 'ashr_ln153' <Predicate = (!icmp_ln152)> <Delay = 3.98> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.98> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.56ns)   --->   "%beta_index_3 = add i2 %beta_index_2, i2 1" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 18 'add' 'beta_index_3' <Predicate = (!icmp_ln152)> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln152 = store i2 %beta_index_3, i2 %beta_index" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 19 'store' 'store_ln152' <Predicate = (!icmp_ln152)> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%membrane_leak_accumulator_load_1 = load i16 %membrane_leak_accumulator"   --->   Operation 25 'load' 'membrane_leak_accumulator_load_1' <Predicate = (icmp_ln152)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %membrane_leak_accumulator_out, i16 %membrane_leak_accumulator_load_1"   --->   Operation 26 'write' 'write_ln0' <Predicate = (icmp_ln152)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 27 'ret' 'ret_ln0' <Predicate = (icmp_ln152)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.66>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%membrane_leak_accumulator_load = load i16 %membrane_leak_accumulator" [src/RNI.cpp:153->src/RNI.cpp:59]   --->   Operation 20 'load' 'membrane_leak_accumulator_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%specloopname_ln152 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 21 'specloopname' 'specloopname_ln152' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (2.07ns)   --->   "%membrane_leak_accumulator_1 = add i16 %ashr_ln153, i16 %membrane_leak_accumulator_load" [src/RNI.cpp:153->src/RNI.cpp:59]   --->   Operation 22 'add' 'membrane_leak_accumulator_1' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.58ns)   --->   "%store_ln152 = store i16 %membrane_leak_accumulator_1, i16 %membrane_leak_accumulator" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 23 'store' 'store_ln152' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln152 = br void %for.inc.i" [src/RNI.cpp:152->src/RNI.cpp:59]   --->   Operation 24 'br' 'br_ln152' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.988ns
The critical path consists of the following:
	'alloca' operation ('beta_index') [4]  (0.000 ns)
	'load' operation ('beta_index', src/RNI.cpp:152->src/RNI.cpp:59) on local variable 'beta_index' [10]  (0.000 ns)
	'ashr' operation ('ashr_ln153', src/RNI.cpp:153->src/RNI.cpp:59) [19]  (3.988 ns)

 <State 2>: 3.665ns
The critical path consists of the following:
	'load' operation ('membrane_leak_accumulator_load', src/RNI.cpp:153->src/RNI.cpp:59) on local variable 'membrane_leak_accumulator' [16]  (0.000 ns)
	'add' operation ('membrane_leak_accumulator', src/RNI.cpp:153->src/RNI.cpp:59) [20]  (2.077 ns)
	'store' operation ('store_ln152', src/RNI.cpp:152->src/RNI.cpp:59) of variable 'membrane_leak_accumulator', src/RNI.cpp:153->src/RNI.cpp:59 on local variable 'membrane_leak_accumulator' [23]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
