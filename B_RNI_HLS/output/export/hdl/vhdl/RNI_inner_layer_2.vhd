-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity RNI_inner_layer_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    NEURONS_STATE_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    NEURONS_STATE_ce0 : OUT STD_LOGIC;
    NEURONS_STATE_we0 : OUT STD_LOGIC;
    NEURONS_STATE_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    NEURONS_STATE_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    NEURONS_MEMBRANE_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    NEURONS_MEMBRANE_ce0 : OUT STD_LOGIC;
    NEURONS_MEMBRANE_we0 : OUT STD_LOGIC;
    NEURONS_MEMBRANE_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    NEURONS_MEMBRANE_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of RNI_inner_layer_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv33_E7A0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001110011110100000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv16_7E : STD_LOGIC_VECTOR (15 downto 0) := "0000000001111110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal BIASES_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal BIASES_ce0 : STD_LOGIC;
    signal BIASES_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal WEIGHTS_INDEX_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal WEIGHTS_INDEX_ce0 : STD_LOGIC;
    signal WEIGHTS_INDEX_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal WEIGHTS_INDEX_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal WEIGHTS_INDEX_ce1 : STD_LOGIC;
    signal WEIGHTS_INDEX_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln105_fu_172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln105_reg_477 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln105_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NEURONS_MEMBRANE_addr_reg_484 : STD_LOGIC_VECTOR (7 downto 0);
    signal NEURONS_MEMBRANE_load_reg_489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal mul_ln171_fu_180_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln171_reg_494 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal leaked_membrane_reg_505 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_510 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_521 : STD_LOGIC_VECTOR (0 downto 0);
    signal leaked_membrane_6_fu_360_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal leaked_membrane_6_reg_533 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal BIASES_load_reg_539 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln108_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln108_reg_545 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal and_ln108_1_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln108_1_reg_549 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_2_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_2_reg_553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_i_i156_fu_435_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_i_i156_reg_562 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_index_reg_572 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal WEIGHTS_INDEX_load_reg_577 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln110_fu_449_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln110_reg_582 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln178_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln178_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_idle : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_ready : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_ce0 : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_we0 : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_done : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_idle : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_ready : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_ce0 : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_ce0 : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_we0 : STD_LOGIC;
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal conv_i133_cast_cast_cast_fu_444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal neuron_index_fu_60 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln108_1_fu_391_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln105_fu_162_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln105_fu_168_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln105_fu_168_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln171_fu_180_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln171_fu_228_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal leaked_membrane_5_fu_231_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln171_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln171_12_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln171_6_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_271_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln171_15_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln171_8_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln171_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln171_13_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln171_10_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln171_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln171_11_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln171_11_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln171_12_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln171_14_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln171_7_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln171_14_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln171_13_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln171_15_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln171_3_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln171_fu_346_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln108_fu_368_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln108_1_fu_371_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln108_fu_377_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln108_2_fu_374_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_383_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_397_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_1_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_i_i156_fu_435_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_i133_cast_cast_fu_440_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component RNI_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        NEURONS_STATE_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        NEURONS_STATE_ce0 : OUT STD_LOGIC;
        NEURONS_STATE_we0 : OUT STD_LOGIC;
        NEURONS_STATE_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component RNI_inner_layer_2_Pipeline_WEIGHTS_LOOP_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln110 : IN STD_LOGIC_VECTOR (13 downto 0);
        zext_ln105 : IN STD_LOGIC_VECTOR (6 downto 0);
        zext_ln110_1 : IN STD_LOGIC_VECTOR (13 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (7 downto 0);
        NEURONS_STATE_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        NEURONS_STATE_ce0 : OUT STD_LOGIC;
        NEURONS_STATE_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        NEURONS_MEMBRANE_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        NEURONS_MEMBRANE_ce0 : OUT STD_LOGIC;
        NEURONS_MEMBRANE_we0 : OUT STD_LOGIC;
        NEURONS_MEMBRANE_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        NEURONS_MEMBRANE_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component RNI_mul_16s_17ns_33_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component RNI_input_layer_BIASES_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component RNI_input_layer_WEIGHTS_INDEX_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    BIASES_U : component RNI_input_layer_BIASES_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 243,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => BIASES_address0,
        ce0 => BIASES_ce0,
        q0 => BIASES_q0);

    WEIGHTS_INDEX_U : component RNI_input_layer_WEIGHTS_INDEX_ROM_AUTO_1R
    generic map (
        DataWidth => 14,
        AddressRange => 244,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => WEIGHTS_INDEX_address0,
        ce0 => WEIGHTS_INDEX_ce0,
        q0 => WEIGHTS_INDEX_q0,
        address1 => WEIGHTS_INDEX_address1,
        ce1 => WEIGHTS_INDEX_ce1,
        q1 => WEIGHTS_INDEX_q1);

    grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132 : component RNI_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start,
        ap_done => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done,
        ap_idle => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_idle,
        ap_ready => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_ready,
        NEURONS_STATE_address0 => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_address0,
        NEURONS_STATE_ce0 => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_ce0,
        NEURONS_STATE_we0 => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_we0,
        NEURONS_STATE_d0 => grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_d0);

    grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138 : component RNI_inner_layer_2_Pipeline_WEIGHTS_LOOP_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start,
        ap_done => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_done,
        ap_idle => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_idle,
        ap_ready => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_ready,
        zext_ln110 => weight_index_reg_572,
        zext_ln105 => neuron_index_fu_60,
        zext_ln110_1 => WEIGHTS_INDEX_load_reg_577,
        trunc_ln => trunc_ln110_reg_582,
        NEURONS_STATE_address0 => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_address0,
        NEURONS_STATE_ce0 => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_ce0,
        NEURONS_STATE_q0 => NEURONS_STATE_q0,
        NEURONS_MEMBRANE_address0 => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_address0,
        NEURONS_MEMBRANE_ce0 => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_ce0,
        NEURONS_MEMBRANE_we0 => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_we0,
        NEURONS_MEMBRANE_d0 => grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_d0,
        NEURONS_MEMBRANE_q0 => NEURONS_MEMBRANE_q0);

    mul_16s_17ns_33_1_1_U79 : component RNI_mul_16s_17ns_33_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 17,
        dout_WIDTH => 33)
    port map (
        din0 => NEURONS_MEMBRANE_load_reg_489,
        din1 => mul_ln171_fu_180_p1,
        dout => mul_ln171_fu_180_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln105_fu_162_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_ready = ap_const_logic_1)) then 
                    grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_ready = ap_const_logic_1)) then 
                    grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    neuron_index_fu_60_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                neuron_index_fu_60 <= ap_const_lv7_40;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                neuron_index_fu_60 <= add_i_i156_reg_562;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                BIASES_load_reg_539 <= BIASES_q0;
                leaked_membrane_6_reg_533 <= leaked_membrane_6_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_fu_162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                NEURONS_MEMBRANE_addr_reg_484 <= zext_ln105_fu_172_p1(8 - 1 downto 0);
                    zext_ln105_reg_477(7 downto 0) <= zext_ln105_fu_172_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                NEURONS_MEMBRANE_load_reg_489 <= NEURONS_MEMBRANE_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                WEIGHTS_INDEX_load_reg_577 <= WEIGHTS_INDEX_q0;
                trunc_ln110_reg_582 <= trunc_ln110_fu_449_p1;
                weight_index_reg_572 <= WEIGHTS_INDEX_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_i_i156_reg_562 <= add_i_i156_fu_435_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                and_ln108_1_reg_549 <= and_ln108_1_fu_423_p2;
                and_ln108_reg_545 <= and_ln108_fu_411_p2;
                xor_ln108_2_reg_553 <= xor_ln108_2_fu_429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln178_reg_587 <= icmp_ln178_fu_454_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                leaked_membrane_reg_505 <= mul_ln171_fu_180_p2(31 downto 16);
                mul_ln171_reg_494 <= mul_ln171_fu_180_p2;
                tmp_18_reg_510 <= mul_ln171_fu_180_p2(31 downto 31);
                tmp_19_reg_516 <= mul_ln171_fu_180_p2(15 downto 15);
                tmp_21_reg_521 <= mul_ln171_fu_180_p2(32 downto 32);
                tmp_reg_499 <= mul_ln171_fu_180_p2(32 downto 32);
            end if;
        end if;
    end process;
    zext_ln105_reg_477(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln105_fu_162_p2, grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done, grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln105_fu_162_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    BIASES_address0 <= zext_ln105_reg_477(8 - 1 downto 0);

    BIASES_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            BIASES_ce0 <= ap_const_logic_1;
        else 
            BIASES_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NEURONS_MEMBRANE_address0_assign_proc : process(zext_ln105_fu_172_p1, ap_CS_fsm_state2, NEURONS_MEMBRANE_addr_reg_484, and_ln108_reg_545, ap_CS_fsm_state6, and_ln108_1_reg_549, xor_ln108_2_reg_553, ap_CS_fsm_state7, grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_address0, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_lv1_0 = and_ln108_reg_545) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_1_reg_549) and (xor_ln108_2_reg_553 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_reg_545) and (xor_ln108_2_reg_553 = ap_const_lv1_1)))) then 
            NEURONS_MEMBRANE_address0 <= NEURONS_MEMBRANE_addr_reg_484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            NEURONS_MEMBRANE_address0 <= zext_ln105_fu_172_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NEURONS_MEMBRANE_address0 <= grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_address0;
        else 
            NEURONS_MEMBRANE_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NEURONS_MEMBRANE_ce0_assign_proc : process(ap_CS_fsm_state2, and_ln108_reg_545, ap_CS_fsm_state6, and_ln108_1_reg_549, xor_ln108_2_reg_553, ap_CS_fsm_state7, grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_ce0, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_lv1_0 = and_ln108_reg_545) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_1_reg_549) and (xor_ln108_2_reg_553 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_reg_545) and (xor_ln108_2_reg_553 = ap_const_lv1_1)))) then 
            NEURONS_MEMBRANE_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NEURONS_MEMBRANE_ce0 <= grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_ce0;
        else 
            NEURONS_MEMBRANE_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NEURONS_MEMBRANE_d0_assign_proc : process(and_ln108_reg_545, ap_CS_fsm_state6, and_ln108_1_reg_549, xor_ln108_2_reg_553, ap_CS_fsm_state7, grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_d0, ap_CS_fsm_state9, ap_CS_fsm_state12, add_ln108_1_fu_391_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NEURONS_MEMBRANE_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_reg_545) and (xor_ln108_2_reg_553 = ap_const_lv1_1))) then 
            NEURONS_MEMBRANE_d0 <= ap_const_lv16_7FFF;
        elsif (((ap_const_lv1_0 = and_ln108_reg_545) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_1_reg_549) and (xor_ln108_2_reg_553 = ap_const_lv1_1))) then 
            NEURONS_MEMBRANE_d0 <= ap_const_lv16_8000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NEURONS_MEMBRANE_d0 <= add_ln108_1_fu_391_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NEURONS_MEMBRANE_d0 <= grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_d0;
        else 
            NEURONS_MEMBRANE_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NEURONS_MEMBRANE_we0_assign_proc : process(and_ln108_reg_545, ap_CS_fsm_state6, and_ln108_1_reg_549, xor_ln108_2_reg_553, ap_CS_fsm_state7, icmp_ln178_reg_587, grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_we0, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_lv1_0 = and_ln108_reg_545) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_1_reg_549) and (xor_ln108_2_reg_553 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln178_reg_587 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln108_reg_545) and (xor_ln108_2_reg_553 = ap_const_lv1_1)))) then 
            NEURONS_MEMBRANE_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NEURONS_MEMBRANE_we0 <= grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_MEMBRANE_we0;
        else 
            NEURONS_MEMBRANE_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NEURONS_STATE_address0_assign_proc : process(zext_ln105_reg_477, grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_address0, grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_address0, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NEURONS_STATE_address0 <= zext_ln105_reg_477(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NEURONS_STATE_address0 <= grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            NEURONS_STATE_address0 <= grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_address0;
        else 
            NEURONS_STATE_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NEURONS_STATE_ce0_assign_proc : process(grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_ce0, grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_ce0, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NEURONS_STATE_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NEURONS_STATE_ce0 <= grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_NEURONS_STATE_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            NEURONS_STATE_ce0 <= grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_ce0;
        else 
            NEURONS_STATE_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NEURONS_STATE_d0_assign_proc : process(grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_d0, ap_CS_fsm_state13, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NEURONS_STATE_d0 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            NEURONS_STATE_d0 <= grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_d0;
        else 
            NEURONS_STATE_d0 <= "X";
        end if; 
    end process;


    NEURONS_STATE_we0_assign_proc : process(icmp_ln178_reg_587, grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_we0, ap_CS_fsm_state13, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln178_reg_587 = ap_const_lv1_1))) then 
            NEURONS_STATE_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            NEURONS_STATE_we0 <= grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_NEURONS_STATE_we0;
        else 
            NEURONS_STATE_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHTS_INDEX_address0 <= conv_i133_cast_cast_cast_fu_444_p1(8 - 1 downto 0);
    WEIGHTS_INDEX_address1 <= zext_ln105_reg_477(8 - 1 downto 0);

    WEIGHTS_INDEX_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            WEIGHTS_INDEX_ce0 <= ap_const_logic_1;
        else 
            WEIGHTS_INDEX_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    WEIGHTS_INDEX_ce1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            WEIGHTS_INDEX_ce1 <= ap_const_logic_1;
        else 
            WEIGHTS_INDEX_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_i_i156_fu_435_p0 <= neuron_index_fu_60;
    add_i_i156_fu_435_p2 <= std_logic_vector(signed(add_i_i156_fu_435_p0) + signed(ap_const_lv7_1));
    add_ln108_1_fu_391_p2 <= std_logic_vector(signed(leaked_membrane_6_reg_533) + signed(sext_ln108_2_fu_374_p1));
    add_ln108_fu_377_p2 <= std_logic_vector(signed(sext_ln108_fu_368_p1) + signed(sext_ln108_1_fu_371_p1));
    and_ln108_1_fu_423_p2 <= (xor_ln108_1_fu_417_p2 and tmp_23_fu_383_p3);
    and_ln108_fu_411_p2 <= (xor_ln108_fu_405_p2 and tmp_24_fu_397_p3);
    and_ln171_11_fu_290_p2 <= (tmp_21_reg_521 and or_ln171_8_fu_284_p2);
    and_ln171_12_fu_295_p2 <= (tmp_21_reg_521 and and_ln171_fu_250_p2);
    and_ln171_13_fu_317_p2 <= (xor_ln171_11_fu_312_p2 and or_ln171_fu_306_p2);
    and_ln171_14_fu_323_p2 <= (tmp_20_fu_236_p3 and and_ln171_11_fu_290_p2);
    and_ln171_15_fu_341_p2 <= (xor_ln171_14_fu_335_p2 and tmp_reg_499);
    and_ln171_fu_250_p2 <= (xor_ln171_fu_244_p2 and tmp_18_reg_510);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done)
    begin
        if ((grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_done)
    begin
        if ((grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done, ap_CS_fsm_state13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv_i133_cast_cast_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_i133_cast_cast_fu_440_p1),64));
        conv_i133_cast_cast_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_i_i156_fu_435_p2),8));

    grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start <= grp_inner_layer_2_Pipeline_NEURONS_STATE_RESET_LOOP_fu_132_ap_start_reg;
    grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start <= grp_inner_layer_2_Pipeline_WEIGHTS_LOOP_2_fu_138_ap_start_reg;
    icmp_ln105_fu_162_p0 <= neuron_index_fu_60;
    icmp_ln105_fu_162_p2 <= "1" when (icmp_ln105_fu_162_p0 = ap_const_lv7_60) else "0";
    icmp_ln178_fu_454_p2 <= "1" when (signed(NEURONS_MEMBRANE_q0) > signed(ap_const_lv16_7E)) else "0";
    leaked_membrane_5_fu_231_p2 <= std_logic_vector(unsigned(zext_ln171_fu_228_p1) + unsigned(leaked_membrane_reg_505));
    leaked_membrane_6_fu_360_p3 <= 
        select_ln171_fu_346_p3 when (or_ln171_3_fu_354_p2(0) = '1') else 
        leaked_membrane_5_fu_231_p2;
    mul_ln171_fu_180_p1 <= ap_const_lv33_E7A0(17 - 1 downto 0);
    or_ln171_3_fu_354_p2 <= (and_ln171_15_fu_341_p2 or and_ln171_13_fu_317_p2);
    or_ln171_6_fu_260_p2 <= (xor_ln171_12_fu_255_p2 or tmp_20_fu_236_p3);
    or_ln171_7_fu_329_p2 <= (and_ln171_14_fu_323_p2 or and_ln171_12_fu_295_p2);
    or_ln171_8_fu_284_p2 <= (xor_ln171_15_fu_278_p2 or or_ln171_6_fu_260_p2);
    or_ln171_fu_306_p2 <= (xor_ln171_10_fu_300_p2 or tmp_20_fu_236_p3);
    select_ln171_fu_346_p3 <= 
        ap_const_lv16_7FFF when (and_ln171_13_fu_317_p2(0) = '1') else 
        ap_const_lv16_8000;
    sext_ln105_fu_168_p0 <= neuron_index_fu_60;
        sext_ln105_fu_168_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln105_fu_168_p0),8));

        sext_ln108_1_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(BIASES_load_reg_539),17));

        sext_ln108_2_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(BIASES_load_reg_539),16));

        sext_ln108_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(leaked_membrane_6_reg_533),17));

    tmp_20_fu_236_p3 <= leaked_membrane_5_fu_231_p2(15 downto 15);
    tmp_22_fu_271_p3 <= mul_ln171_reg_494(32 downto 32);
    tmp_23_fu_383_p3 <= add_ln108_fu_377_p2(16 downto 16);
    tmp_24_fu_397_p3 <= add_ln108_1_fu_391_p2(15 downto 15);
    trunc_ln110_fu_449_p1 <= WEIGHTS_INDEX_q1(8 - 1 downto 0);
    xor_ln108_1_fu_417_p2 <= (tmp_24_fu_397_p3 xor ap_const_lv1_1);
    xor_ln108_2_fu_429_p2 <= (tmp_24_fu_397_p3 xor tmp_23_fu_383_p3);
    xor_ln108_fu_405_p2 <= (tmp_23_fu_383_p3 xor ap_const_lv1_1);
    xor_ln171_10_fu_300_p2 <= (xor_ln171_13_fu_266_p2 xor ap_const_lv1_1);
    xor_ln171_11_fu_312_p2 <= (tmp_reg_499 xor ap_const_lv1_1);
    xor_ln171_12_fu_255_p2 <= (tmp_18_reg_510 xor ap_const_lv1_1);
    xor_ln171_13_fu_266_p2 <= (tmp_21_reg_521 xor or_ln171_6_fu_260_p2);
    xor_ln171_14_fu_335_p2 <= (or_ln171_7_fu_329_p2 xor ap_const_lv1_1);
    xor_ln171_15_fu_278_p2 <= (tmp_22_fu_271_p3 xor ap_const_lv1_1);
    xor_ln171_fu_244_p2 <= (tmp_20_fu_236_p3 xor ap_const_lv1_1);
    zext_ln105_fu_172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln105_fu_168_p1),64));
    zext_ln171_fu_228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_516),16));
end behav;
