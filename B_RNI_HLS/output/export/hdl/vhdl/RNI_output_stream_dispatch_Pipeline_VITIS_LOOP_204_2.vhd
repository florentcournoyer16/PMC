-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity RNI_output_stream_dispatch_Pipeline_VITIS_LOOP_204_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_pkts_dest_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_dest_ce0 : OUT STD_LOGIC;
    out_pkts_dest_we0 : OUT STD_LOGIC;
    out_pkts_dest_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_pkts_dest_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    out_pkts_dest_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_dest_ce1 : OUT STD_LOGIC;
    out_pkts_dest_we1 : OUT STD_LOGIC;
    out_pkts_dest_d1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_pkts_id_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_id_ce0 : OUT STD_LOGIC;
    out_pkts_id_we0 : OUT STD_LOGIC;
    out_pkts_id_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_pkts_id_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    out_pkts_id_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_id_ce1 : OUT STD_LOGIC;
    out_pkts_id_we1 : OUT STD_LOGIC;
    out_pkts_id_d1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_pkts_last_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_last_ce0 : OUT STD_LOGIC;
    out_pkts_last_we0 : OUT STD_LOGIC;
    out_pkts_last_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_pkts_last_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    out_pkts_last_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_last_ce1 : OUT STD_LOGIC;
    out_pkts_last_we1 : OUT STD_LOGIC;
    out_pkts_last_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_pkts_user_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_user_ce0 : OUT STD_LOGIC;
    out_pkts_user_we0 : OUT STD_LOGIC;
    out_pkts_user_d0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_pkts_user_q0 : IN STD_LOGIC_VECTOR (1 downto 0);
    out_pkts_user_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_user_ce1 : OUT STD_LOGIC;
    out_pkts_user_we1 : OUT STD_LOGIC;
    out_pkts_user_d1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_pkts_strb_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_strb_ce0 : OUT STD_LOGIC;
    out_pkts_strb_we0 : OUT STD_LOGIC;
    out_pkts_strb_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_pkts_strb_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
    out_pkts_strb_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_strb_ce1 : OUT STD_LOGIC;
    out_pkts_strb_we1 : OUT STD_LOGIC;
    out_pkts_strb_d1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_pkts_keep_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_keep_ce0 : OUT STD_LOGIC;
    out_pkts_keep_we0 : OUT STD_LOGIC;
    out_pkts_keep_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_pkts_keep_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
    out_pkts_keep_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_keep_ce1 : OUT STD_LOGIC;
    out_pkts_keep_we1 : OUT STD_LOGIC;
    out_pkts_keep_d1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_pkts_data_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_pkts_data_ce0 : OUT STD_LOGIC;
    out_pkts_data_we0 : OUT STD_LOGIC;
    out_pkts_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_stream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_pkts_keep_0_0_val : IN STD_LOGIC_VECTOR (3 downto 0);
    in_pkts_strb_0_0_val : IN STD_LOGIC_VECTOR (3 downto 0);
    in_pkts_user_0_0_val : IN STD_LOGIC_VECTOR (1 downto 0);
    in_pkts_last_0_0_val : IN STD_LOGIC_VECTOR (0 downto 0);
    in_pkts_id_0_0_val : IN STD_LOGIC_VECTOR (4 downto 0);
    in_pkts_dest_0_0_val : IN STD_LOGIC_VECTOR (5 downto 0);
    in_pkts_data_0_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
    in_pkts_keep_0_3_val : IN STD_LOGIC_VECTOR (3 downto 0);
    in_pkts_strb_0_3_val : IN STD_LOGIC_VECTOR (3 downto 0);
    in_pkts_user_0_3_val : IN STD_LOGIC_VECTOR (1 downto 0);
    in_pkts_last_0_3_val : IN STD_LOGIC_VECTOR (0 downto 0);
    in_pkts_id_0_3_val : IN STD_LOGIC_VECTOR (4 downto 0);
    in_pkts_dest_0_3_val : IN STD_LOGIC_VECTOR (5 downto 0);
    NEURONS_STATE_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    NEURONS_STATE_ce0 : OUT STD_LOGIC;
    NEURONS_STATE_q0 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of RNI_output_stream_dispatch_Pipeline_VITIS_LOOP_204_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_F7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011110111";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln204_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_1_reg_502 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln204_reg_507 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_pkts_data_addr_1_reg_511 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pkts_keep_addr_1_reg_516 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pkts_strb_addr_1_reg_521 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pkts_user_addr_1_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pkts_last_addr_1_reg_531 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pkts_id_addr_1_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pkts_dest_addr_1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln211_1_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln211_1_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal trunc_ln211_cast_cast_cast_cast_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_fu_475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_114 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln204_fu_485_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln207_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln204_fu_438_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln211_cast_cast_cast_fu_444_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln211_cast_cast_cast_fu_444_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln207_fu_459_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln211_fu_465_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln211_fu_465_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln211_fu_471_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component RNI_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component RNI_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_fu_114 <= ap_const_lv5_14;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln204_reg_507 = ap_const_lv1_0))) then 
                i_fu_114 <= add_ln204_fu_485_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_1_reg_502 <= ap_sig_allocacmp_i_1;
                icmp_ln204_reg_507 <= icmp_ln204_fu_438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                out_pkts_data_addr_1_reg_511 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);
                out_pkts_dest_addr_1_reg_541 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);
                out_pkts_id_addr_1_reg_536 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);
                out_pkts_keep_addr_1_reg_516 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);
                out_pkts_last_addr_1_reg_531 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);
                out_pkts_strb_addr_1_reg_521 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);
                out_pkts_user_addr_1_reg_526 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln204_reg_507 = ap_const_lv1_0))) then
                    zext_ln211_1_reg_554(0) <= zext_ln211_1_fu_480_p1(0);
            end if;
        end if;
    end process;
    zext_ln211_1_reg_554(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter0_stage0, ap_block_pp0_stage1_subdone, ap_idle_pp0_1to1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    NEURONS_STATE_address0 <= zext_ln211_fu_475_p1(8 - 1 downto 0);

    NEURONS_STATE_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            NEURONS_STATE_ce0 <= ap_const_logic_1;
        else 
            NEURONS_STATE_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln204_fu_485_p2 <= std_logic_vector(signed(i_1_reg_502) + signed(ap_const_lv5_1));
    add_ln211_fu_465_p0 <= ap_sig_allocacmp_i_1;
    add_ln211_fu_465_p2 <= std_logic_vector(signed(add_ln211_fu_465_p0) + signed(ap_const_lv5_1C));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, out_stream_TREADY)
    begin
                ap_block_pp0_stage0_01001 <= ((out_stream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, out_stream_TREADY)
    begin
                ap_block_pp0_stage0_11001 <= ((out_stream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, out_stream_TREADY)
    begin
                ap_block_pp0_stage0_subdone <= ((out_stream_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(out_stream_TREADY)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (out_stream_TREADY = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln204_fu_438_p2)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_114, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv5_14;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_114;
        end if; 
    end process;

    icmp_ln204_fu_438_p0 <= ap_sig_allocacmp_i_1;
    icmp_ln204_fu_438_p2 <= "1" when (icmp_ln204_fu_438_p0 = ap_const_lv5_18) else "0";
    icmp_ln207_fu_459_p0 <= ap_sig_allocacmp_i_1;
    icmp_ln207_fu_459_p2 <= "1" when (icmp_ln207_fu_459_p0 = ap_const_lv5_17) else "0";

    out_pkts_data_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, out_pkts_data_addr_1_reg_511, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_data_address0 <= out_pkts_data_addr_1_reg_511;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_data_address0 <= ap_const_lv64_F7(8 - 1 downto 0);
            else 
                out_pkts_data_address0 <= "XXXXXXXX";
            end if;
        else 
            out_pkts_data_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out_pkts_data_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_data_ce0 <= ap_const_logic_1;
        else 
            out_pkts_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_data_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, in_pkts_data_0_3_val, ap_block_pp0_stage0, zext_ln211_1_fu_480_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_data_d0 <= zext_ln211_1_fu_480_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_data_d0 <= in_pkts_data_0_3_val;
            else 
                out_pkts_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_pkts_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_pkts_data_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, icmp_ln204_reg_507, ap_block_pp0_stage1_11001, icmp_ln207_fu_459_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln204_reg_507 = ap_const_lv1_0)) or ((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_data_we0 <= ap_const_logic_1;
        else 
            out_pkts_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_dest_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, out_pkts_dest_addr_1_reg_541, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_dest_address0 <= out_pkts_dest_addr_1_reg_541;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_dest_address0 <= ap_const_lv64_F7(8 - 1 downto 0);
            else 
                out_pkts_dest_address0 <= "XXXXXXXX";
            end if;
        else 
            out_pkts_dest_address0 <= "XXXXXXXX";
        end if; 
    end process;

    out_pkts_dest_address1 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);

    out_pkts_dest_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_dest_ce0 <= ap_const_logic_1;
        else 
            out_pkts_dest_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_dest_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_dest_ce1 <= ap_const_logic_1;
        else 
            out_pkts_dest_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_pkts_dest_d0 <= in_pkts_dest_0_3_val;
    out_pkts_dest_d1 <= in_pkts_dest_0_0_val;

    out_pkts_dest_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001, icmp_ln207_fu_459_p2)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_dest_we0 <= ap_const_logic_1;
        else 
            out_pkts_dest_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_dest_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_dest_we1 <= ap_const_logic_1;
        else 
            out_pkts_dest_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_id_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, out_pkts_id_addr_1_reg_536, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_id_address0 <= out_pkts_id_addr_1_reg_536;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_id_address0 <= ap_const_lv64_F7(8 - 1 downto 0);
            else 
                out_pkts_id_address0 <= "XXXXXXXX";
            end if;
        else 
            out_pkts_id_address0 <= "XXXXXXXX";
        end if; 
    end process;

    out_pkts_id_address1 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);

    out_pkts_id_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_id_ce0 <= ap_const_logic_1;
        else 
            out_pkts_id_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_id_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_id_ce1 <= ap_const_logic_1;
        else 
            out_pkts_id_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_pkts_id_d0 <= in_pkts_id_0_3_val;
    out_pkts_id_d1 <= in_pkts_id_0_0_val;

    out_pkts_id_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001, icmp_ln207_fu_459_p2)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_id_we0 <= ap_const_logic_1;
        else 
            out_pkts_id_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_id_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_id_we1 <= ap_const_logic_1;
        else 
            out_pkts_id_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_keep_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, out_pkts_keep_addr_1_reg_516, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_keep_address0 <= out_pkts_keep_addr_1_reg_516;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_keep_address0 <= ap_const_lv64_F7(8 - 1 downto 0);
            else 
                out_pkts_keep_address0 <= "XXXXXXXX";
            end if;
        else 
            out_pkts_keep_address0 <= "XXXXXXXX";
        end if; 
    end process;

    out_pkts_keep_address1 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);

    out_pkts_keep_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_keep_ce0 <= ap_const_logic_1;
        else 
            out_pkts_keep_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_keep_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_keep_ce1 <= ap_const_logic_1;
        else 
            out_pkts_keep_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_pkts_keep_d0 <= in_pkts_keep_0_3_val;
    out_pkts_keep_d1 <= in_pkts_keep_0_0_val;

    out_pkts_keep_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001, icmp_ln207_fu_459_p2)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_keep_we0 <= ap_const_logic_1;
        else 
            out_pkts_keep_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_keep_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_keep_we1 <= ap_const_logic_1;
        else 
            out_pkts_keep_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_last_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, out_pkts_last_addr_1_reg_531, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_last_address0 <= out_pkts_last_addr_1_reg_531;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_last_address0 <= ap_const_lv64_F7(8 - 1 downto 0);
            else 
                out_pkts_last_address0 <= "XXXXXXXX";
            end if;
        else 
            out_pkts_last_address0 <= "XXXXXXXX";
        end if; 
    end process;

    out_pkts_last_address1 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);

    out_pkts_last_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_last_ce0 <= ap_const_logic_1;
        else 
            out_pkts_last_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_last_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_last_ce1 <= ap_const_logic_1;
        else 
            out_pkts_last_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_pkts_last_d0 <= in_pkts_last_0_3_val;
    out_pkts_last_d1 <= in_pkts_last_0_0_val;

    out_pkts_last_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001, icmp_ln207_fu_459_p2)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_last_we0 <= ap_const_logic_1;
        else 
            out_pkts_last_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_last_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_last_we1 <= ap_const_logic_1;
        else 
            out_pkts_last_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_strb_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, out_pkts_strb_addr_1_reg_521, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_strb_address0 <= out_pkts_strb_addr_1_reg_521;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_strb_address0 <= ap_const_lv64_F7(8 - 1 downto 0);
            else 
                out_pkts_strb_address0 <= "XXXXXXXX";
            end if;
        else 
            out_pkts_strb_address0 <= "XXXXXXXX";
        end if; 
    end process;

    out_pkts_strb_address1 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);

    out_pkts_strb_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_strb_ce0 <= ap_const_logic_1;
        else 
            out_pkts_strb_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_strb_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_strb_ce1 <= ap_const_logic_1;
        else 
            out_pkts_strb_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_pkts_strb_d0 <= in_pkts_strb_0_3_val;
    out_pkts_strb_d1 <= in_pkts_strb_0_0_val;

    out_pkts_strb_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001, icmp_ln207_fu_459_p2)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_strb_we0 <= ap_const_logic_1;
        else 
            out_pkts_strb_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_strb_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_strb_we1 <= ap_const_logic_1;
        else 
            out_pkts_strb_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_user_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, out_pkts_user_addr_1_reg_526, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_pkts_user_address0 <= out_pkts_user_addr_1_reg_526;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_pkts_user_address0 <= ap_const_lv64_F7(8 - 1 downto 0);
            else 
                out_pkts_user_address0 <= "XXXXXXXX";
            end if;
        else 
            out_pkts_user_address0 <= "XXXXXXXX";
        end if; 
    end process;

    out_pkts_user_address1 <= trunc_ln211_cast_cast_cast_cast_fu_448_p1(8 - 1 downto 0);

    out_pkts_user_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_pkts_user_ce0 <= ap_const_logic_1;
        else 
            out_pkts_user_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_user_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_user_ce1 <= ap_const_logic_1;
        else 
            out_pkts_user_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_pkts_user_d0 <= in_pkts_user_0_3_val;
    out_pkts_user_d1 <= in_pkts_user_0_0_val;

    out_pkts_user_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001, icmp_ln207_fu_459_p2)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_user_we0 <= ap_const_logic_1;
        else 
            out_pkts_user_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pkts_user_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln204_fu_438_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln204_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pkts_user_we1 <= ap_const_logic_1;
        else 
            out_pkts_user_we1 <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_TDATA <= zext_ln211_1_reg_554;

    out_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, out_stream_TREADY, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TDEST <= out_pkts_dest_q0;
    out_stream_TID <= out_pkts_id_q0;
    out_stream_TKEEP <= out_pkts_keep_q0;
    out_stream_TLAST <= out_pkts_last_q0;
    out_stream_TSTRB <= out_pkts_strb_q0;
    out_stream_TUSER <= out_pkts_user_q0;

    out_stream_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_stream_TVALID <= ap_const_logic_1;
        else 
            out_stream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln211_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln211_fu_465_p2),8));

    trunc_ln211_cast_cast_cast_cast_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln211_cast_cast_cast_fu_444_p1),64));
    trunc_ln211_cast_cast_cast_fu_444_p0 <= ap_sig_allocacmp_i_1;
        trunc_ln211_cast_cast_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln211_cast_cast_cast_fu_444_p0),8));

    zext_ln211_1_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(NEURONS_STATE_q0),32));
    zext_ln211_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln211_fu_471_p1),64));
end behav;
