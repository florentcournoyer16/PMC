#ifndef TB_H
#define TB_H

#define INPUT_L 	512
#define OUTPUT_L	512
#define BASE		int

// --------------------------------------------------
// UNIT TESTS
// --------------------------------------------------

// output caching
BASE UT_OUTPUT[OUTPUT_L] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

// leak
BASE UT_LEAK_INPUT[2][INPUT_L] = { { 0, 0, 0, 0 }, { 10, 10, 10, 10 } };
BASE UT_LEAK_EXPECTED[5][INPUT_L] = { { 9, 9, 9, 9 }, { 8, 8, 8, 8 }, { 7, 7, 7, 7 }, { 6, 6, 6, 6 }, { 5, 5, 5, 5 } };

// acumulation
BASE UT_ACCUMULATION_INPUT[INPUT_L] = { 2, 2, 2, 2 };
BASE UT_ACCUMULATION_EXPECTED[5][INPUT_L] = { { 1, 1, 1, 1 }, { 2, 2, 2, 2 }, { 3, 3, 3, 3 }, { 4, 4, 4, 4 }, { 5, 5, 5, 5 } };

// --------------------------------------------------
// INTE TESTS
// --------------------------------------------------

// output caching
BASE IT_OUTPUT[OUTPUT_L] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

// single input no discharge - SIND
BASE IT_SIND_INPUT[INPUT_L] = { 1, 1, 1, 1 };
BASE IT_SIND_EXPECTED[INPUT_L] = { 0, 0, 0, 0 };

// singl input single discharge test - SISD
BASE IT_SISD_INPUT[INPUT_L] = { 1, 1, -3, 1 };
BASE IT_SISD_EXPECTED[INPUT_L] = { 1, 1, -3, 1 };

// multiple input no discharge test - MIND
BASE IT_MIND_INPUT[10][INPUT_L] = { { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 } };
BASE IT_MIND_EXPECTED[10][INPUT_L] = { { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 } };

// multiple input single discharge test - MISD
BASE IT_MISD_INPUT[10][INPUT_L] = { { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 } };
BASE IT_MISD_OUTPUT[10][INPUT_L] = { { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 } };

// multiple input multiple discharge test - MIDT
BASE IT_MIDT_INPUT[10][INPUT_L] = { { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }};
BASE IT_MIDT_OUTPUT[10][INPUT_L] = { { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 }, { 1, 3, -5, 2 } };

// visual test lmao remi L
BASE data[512] = { 1, 15, -2, 6, 4, 17, 0, 7, 7, 16, 2, 7, 8, 13, 5, 8, 7, 8, 7, 9, 5, 1, 8, 11, 1, -4, 8, 13, -3, -8, 6, 14, -7, -12, 4, 14, -10, -13, 1, 13, -10, -12, 0, 11, -6, -10, 0, 7, 0, -7, 0, 4, 7, -4, 1, 1, 16, -2, 3, -1, 23, -1, 6, -2, 28, -1, 9, -2, 28, -2, 12, -1, 24, -3, 14, 0, 18, -3, 15, 3, 10, -3, 16, 7, 4, -2, 15, 12, 0, -1, 14, 16, -1, 0, 13, 20, 0, 3, 11, 21, 2, 5, 8, 19, 7, 7, 6, 16, 11, 10, 4, 10, 14, 12, 2, 5, 14, 14, 0, 0, 12, 15, 0, -1, 8, 16, 0, -1, 3, 16, 1, 0, -2, 15, 3, 5, -6, 13, 5, 11, -8, 11, 7, 17, -7, 10, 9, 22, -4, 9, 12, 27, 1, 10, 13, 29, 6, 13, 14, 29, 11, 17, 14, 26, 15, 21, 13, 21, 17, 23, 11, 15, 16, 23, 7, 9, 15, 20, 3, 4, 12, 14, 0, 2, 9, 6, -3, 3, 6, 0, -4, 6, 4, -5, -3, 11, 3, -7, 0, 17, 3, -5, 4, 23, 4, -1, 11, 28, 5, 4, 18, 32, 7, 10, 24, 34, 7, 14, 27, 33, 6, 14, 25, 28, 2, 10, 18, 18, -3, 2, 4, 3, -12, -8, -15, -17, -23, -22, -36, -41, -36, -37, -58, -66, -49, -49, -77, -90, -59, -58, -90, -110, -66, -62, -96, -122, -69, -61, -95, -127, -66, -56, -89, -122, -58, -47, -79, -111, -46, -37, -68, -95, -31, -27, -57, -77, -17, -19, -47, -58, -5, -13, -37, -41, 2, -9, -26, -27, 6, -7, -16, -17, 7, -8, -5, -9, 4, -9, 5, -4, 1, -10, 14, 0, -1, -10, 21, 1, -2, -9, 25, 3, -1, -7, 25, 4, 0, -3, 24, 5, 4, 0, 22, 6, 8, 4, 21, 8, 11, 8, 21, 12, 14, 11, 23, 18, 15, 14, 26, 27, 17, 17, 30, 37, 19, 20, 34, 47, 21, 22, 36, 56, 23, 25, 37, 62, 25, 28, 36, 65, 26, 30, 34, 63, 26, 32, 32, 59, 24, 33, 29, 52, 20, 33, 26, 45, 15, 32, 25, 39, 11, 29, 25, 35, 7, 25, 25, 32, 4, 21, 26, 30, 4, 17, 26, 28, 5, 14, 24, 25, 6, 11, 21, 22, 8, 9, 16, 18, 9, 7, 11, 14, 9, 4, 5, 10, 7, 0, 0, 8, 5, -5, -2, 6, 3, -11, -3, 5, 2, -16, -1, 6, 2, -20, 2, 6, 3, -20, 5, 7, 3, -18, 9, 7, 4, -14, 10, 5, 4, -9, 8, 2, 2, -4, 3, -1, 0, -1, -2, -6, -3, 0, -8, -11, -7, 1, -14, -14, -10, 1, -18, -15, -11, 1, -20, -15, -9, 1, -20, -13, -5, 2, -18, -9, 0, 3, -16, -6, 6, 3, -13, -3, 13, 2, -11, -2, 17, 0, -9, -2, 19, -1, -7, -4, 18, -2, -6, -6, 15, -3, -5, -8 };

#endif // TB_H
