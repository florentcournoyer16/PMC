-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LIGHT_MODULE is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    in_stream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_stream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of LIGHT_MODULE is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "LIGHT_MODULE_LIGHT_MODULE,hls_ip_2023_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.368000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=172,HLS_SYN_LUT=351,HLS_VERSION=2023_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_done : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_idle : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_ready : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_in_stream_TREADY : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_dest_out : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_dest_out_ap_vld : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_id_out : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_id_out_ap_vld : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_user_out : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_user_out_ap_vld : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_strb_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_strb_out_ap_vld : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_keep_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_keep_out_ap_vld : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_data_out_ap_vld : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_done : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_idle : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_ready : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TREADY : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID : STD_LOGIC;
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TUSER : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TDEST : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal in_pkts_data_0_070_fu_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_pkts_keep_0_071_fu_76 : STD_LOGIC_VECTOR (3 downto 0);
    signal in_pkts_strb_0_072_fu_80 : STD_LOGIC_VECTOR (3 downto 0);
    signal in_pkts_user_0_073_fu_84 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_pkts_id_0_074_fu_88 : STD_LOGIC_VECTOR (4 downto 0);
    signal in_pkts_dest_0_075_fu_92 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_TVALID_int_regslice : STD_LOGIC;
    signal in_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TUSER_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_in_stream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_id_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TID_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_in_stream_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDEST_int_regslice : STD_LOGIC_VECTOR (5 downto 0);
    signal regslice_both_in_stream_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal out_stream_TVALID_int_regslice : STD_LOGIC;
    signal out_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component LIGHT_MODULE_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_TVALID : IN STD_LOGIC;
        in_pkts_dest_0_075 : IN STD_LOGIC_VECTOR (5 downto 0);
        in_pkts_id_0_074 : IN STD_LOGIC_VECTOR (4 downto 0);
        in_pkts_user_0_073 : IN STD_LOGIC_VECTOR (1 downto 0);
        in_pkts_strb_0_072 : IN STD_LOGIC_VECTOR (3 downto 0);
        in_pkts_keep_0_071 : IN STD_LOGIC_VECTOR (3 downto 0);
        in_pkts_data_0_070 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        in_stream_TREADY : OUT STD_LOGIC;
        in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        in_stream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
        out_pkts_dest_out : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_pkts_dest_out_ap_vld : OUT STD_LOGIC;
        out_pkts_id_out : OUT STD_LOGIC_VECTOR (4 downto 0);
        out_pkts_id_out_ap_vld : OUT STD_LOGIC;
        out_pkts_user_out : OUT STD_LOGIC_VECTOR (1 downto 0);
        out_pkts_user_out_ap_vld : OUT STD_LOGIC;
        out_pkts_strb_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_pkts_strb_out_ap_vld : OUT STD_LOGIC;
        out_pkts_keep_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_pkts_keep_out_ap_vld : OUT STD_LOGIC;
        out_pkts_data_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_pkts_data_out_ap_vld : OUT STD_LOGIC );
    end component;


    component LIGHT_MODULE_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_stream_TREADY : IN STD_LOGIC;
        out_pkts_data_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_pkts_keep_reload : IN STD_LOGIC_VECTOR (3 downto 0);
        out_pkts_strb_reload : IN STD_LOGIC_VECTOR (3 downto 0);
        out_pkts_user_reload : IN STD_LOGIC_VECTOR (1 downto 0);
        out_pkts_id_reload : IN STD_LOGIC_VECTOR (4 downto 0);
        out_pkts_dest_reload : IN STD_LOGIC_VECTOR (5 downto 0);
        out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_stream_TVALID : OUT STD_LOGIC;
        out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
        out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        out_stream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component LIGHT_MODULE_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component LIGHT_MODULE_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120 : component LIGHT_MODULE_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start,
        ap_done => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_done,
        ap_idle => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_idle,
        ap_ready => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_ready,
        in_stream_TVALID => in_stream_TVALID_int_regslice,
        in_pkts_dest_0_075 => in_pkts_dest_0_075_fu_92,
        in_pkts_id_0_074 => in_pkts_id_0_074_fu_88,
        in_pkts_user_0_073 => in_pkts_user_0_073_fu_84,
        in_pkts_strb_0_072 => in_pkts_strb_0_072_fu_80,
        in_pkts_keep_0_071 => in_pkts_keep_0_071_fu_76,
        in_pkts_data_0_070 => in_pkts_data_0_070_fu_72,
        in_stream_TDATA => in_stream_TDATA_int_regslice,
        in_stream_TREADY => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_in_stream_TREADY,
        in_stream_TKEEP => in_stream_TKEEP_int_regslice,
        in_stream_TSTRB => in_stream_TSTRB_int_regslice,
        in_stream_TUSER => in_stream_TUSER_int_regslice,
        in_stream_TLAST => in_stream_TLAST_int_regslice,
        in_stream_TID => in_stream_TID_int_regslice,
        in_stream_TDEST => in_stream_TDEST_int_regslice,
        out_pkts_dest_out => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_dest_out,
        out_pkts_dest_out_ap_vld => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_dest_out_ap_vld,
        out_pkts_id_out => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_id_out,
        out_pkts_id_out_ap_vld => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_id_out_ap_vld,
        out_pkts_user_out => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_user_out,
        out_pkts_user_out_ap_vld => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_user_out_ap_vld,
        out_pkts_strb_out => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_strb_out,
        out_pkts_strb_out_ap_vld => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_strb_out_ap_vld,
        out_pkts_keep_out => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_keep_out,
        out_pkts_keep_out_ap_vld => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_keep_out_ap_vld,
        out_pkts_data_out => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_data_out,
        out_pkts_data_out_ap_vld => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_data_out_ap_vld);

    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150 : component LIGHT_MODULE_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start,
        ap_done => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_done,
        ap_idle => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_idle,
        ap_ready => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_ready,
        out_stream_TREADY => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TREADY,
        out_pkts_data_reload => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_data_out,
        out_pkts_keep_reload => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_keep_out,
        out_pkts_strb_reload => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_strb_out,
        out_pkts_user_reload => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_user_out,
        out_pkts_id_reload => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_id_out,
        out_pkts_dest_reload => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_dest_out,
        out_stream_TDATA => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TDATA,
        out_stream_TVALID => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        out_stream_TKEEP => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TKEEP,
        out_stream_TSTRB => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TSTRB,
        out_stream_TUSER => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TUSER,
        out_stream_TLAST => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TLAST,
        out_stream_TID => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TID,
        out_stream_TDEST => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TDEST);

    ctrl_s_axi_U : component LIGHT_MODULE_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    regslice_both_in_stream_V_data_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDATA,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_data_V_U_ack_in,
        data_out => in_stream_TDATA_int_regslice,
        vld_out => in_stream_TVALID_int_regslice,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_data_V_U_apdone_blk);

    regslice_both_in_stream_V_keep_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TKEEP,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_keep_V_U_ack_in,
        data_out => in_stream_TKEEP_int_regslice,
        vld_out => regslice_both_in_stream_V_keep_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_keep_V_U_apdone_blk);

    regslice_both_in_stream_V_strb_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TSTRB,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_strb_V_U_ack_in,
        data_out => in_stream_TSTRB_int_regslice,
        vld_out => regslice_both_in_stream_V_strb_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_strb_V_U_apdone_blk);

    regslice_both_in_stream_V_user_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TUSER,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_user_V_U_ack_in,
        data_out => in_stream_TUSER_int_regslice,
        vld_out => regslice_both_in_stream_V_user_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_user_V_U_apdone_blk);

    regslice_both_in_stream_V_last_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TLAST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_last_V_U_ack_in,
        data_out => in_stream_TLAST_int_regslice,
        vld_out => regslice_both_in_stream_V_last_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_last_V_U_apdone_blk);

    regslice_both_in_stream_V_id_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TID,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_id_V_U_ack_in,
        data_out => in_stream_TID_int_regslice,
        vld_out => regslice_both_in_stream_V_id_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_id_V_U_apdone_blk);

    regslice_both_in_stream_V_dest_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDEST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_dest_V_U_ack_in,
        data_out => in_stream_TDEST_int_regslice,
        vld_out => regslice_both_in_stream_V_dest_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_dest_V_U_apdone_blk);

    regslice_both_out_stream_V_data_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TDATA,
        vld_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        ack_in => out_stream_TREADY_int_regslice,
        data_out => out_stream_TDATA,
        vld_out => regslice_both_out_stream_V_data_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_data_V_U_apdone_blk);

    regslice_both_out_stream_V_keep_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TKEEP,
        vld_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_keep_V_U_ack_in_dummy,
        data_out => out_stream_TKEEP,
        vld_out => regslice_both_out_stream_V_keep_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_keep_V_U_apdone_blk);

    regslice_both_out_stream_V_strb_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TSTRB,
        vld_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_strb_V_U_ack_in_dummy,
        data_out => out_stream_TSTRB,
        vld_out => regslice_both_out_stream_V_strb_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_strb_V_U_apdone_blk);

    regslice_both_out_stream_V_user_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TUSER,
        vld_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_user_V_U_ack_in_dummy,
        data_out => out_stream_TUSER,
        vld_out => regslice_both_out_stream_V_user_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_user_V_U_apdone_blk);

    regslice_both_out_stream_V_last_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TLAST,
        vld_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_last_V_U_ack_in_dummy,
        data_out => out_stream_TLAST,
        vld_out => regslice_both_out_stream_V_last_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_last_V_U_apdone_blk);

    regslice_both_out_stream_V_id_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TID,
        vld_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_id_V_U_ack_in_dummy,
        data_out => out_stream_TID,
        vld_out => regslice_both_out_stream_V_id_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_id_V_U_apdone_blk);

    regslice_both_out_stream_V_dest_V_U : component LIGHT_MODULE_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TDEST,
        vld_in => grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_dest_V_U_ack_in_dummy,
        data_out => out_stream_TDEST,
        vld_out => regslice_both_out_stream_V_dest_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_ready = ap_const_logic_1)) then 
                    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_ready = ap_const_logic_1)) then 
                    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                in_pkts_data_0_070_fu_72 <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_data_out;
                in_pkts_dest_0_075_fu_92 <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_dest_out;
                in_pkts_id_0_074_fu_88 <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_id_out;
                in_pkts_keep_0_071_fu_76 <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_keep_out;
                in_pkts_strb_0_072_fu_80 <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_strb_out;
                in_pkts_user_0_073_fu_84 <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_out_pkts_user_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_done, grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_done)
    begin
        if ((grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_done)
    begin
        if ((grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_const_logic_0;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_ap_start_reg;
    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_ap_start_reg;
    grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TREADY <= (out_stream_TREADY_int_regslice and ap_CS_fsm_state6);
    in_stream_TREADY <= regslice_both_in_stream_V_data_V_U_ack_in;

    in_stream_TREADY_int_regslice_assign_proc : process(grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_in_stream_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_stream_TREADY_int_regslice <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_16_2_fu_120_in_stream_TREADY;
        else 
            in_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_TVALID <= regslice_both_out_stream_V_data_V_U_vld_out;
    out_stream_TVALID_int_regslice <= grp_LIGHT_MODULE_Pipeline_VITIS_LOOP_22_3_fu_150_out_stream_TVALID;
end behav;
