<profile>

<section name = "Vitis HLS Report for 'RNI_Pipeline_WEIGHTS_LOOP'" level="0">
<item name = "Date">Thu Feb  8 18:39:15 2024
</item>
<item name = "Version">2023.1.1 (Build 3869133 on Jun 15 2023)</item>
<item name = "Project">RNI_hls</item>
<item name = "Solution">RNI (Vivado IP Flow Target)</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020-clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 7.300 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">?, ?, ?, ?, ?, ?, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- WEIGHTS_LOOP">?, ?, 5, 2, 1, ?, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 257, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, 2, 165, 50, -</column>
<column name="Memory">0, -, 8, 7, -</column>
<column name="Multiplexer">-, -, -, 87, -</column>
<column name="Register">-, -, 353, -, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">0, ~0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="mul_8s_32s_32_2_1_U1">mul_8s_32s_32_2_1, 0, 2, 165, 50, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="WEIGHTS_U">RNI_Pipeline_WEIGHTS_LOOP_WEIGHTS_ROM_AUTO_1R, 0, 8, 7, 0, 56, 8, 1, 448</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln23_fu_229_p2">+, 0, 0, 71, 64, 1</column>
<column name="add_ln31_fu_254_p2">+, 0, 0, 39, 32, 32</column>
<column name="add_ln39_1_fu_208_p2">+, 0, 0, 7, 4, 4</column>
<column name="add_ln39_fu_203_p2">+, 0, 0, 13, 4, 2</column>
<column name="add_ln41_fu_247_p2">+, 0, 0, 39, 32, 32</column>
<column name="sub_ln39_fu_213_p2">-, 0, 0, 7, 4, 4</column>
<column name="ap_block_pp0_stage0_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state3_pp0_stage0_iter1">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_275">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op43_read_state3">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln23_fu_194_p2">icmp, 0, 0, 71, 64, 64</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="NEURONS_MEM_d0">14, 3, 32, 96</column>
<column name="WEIGHTS_address0">14, 3, 6, 18</column>
<column name="ap_NS_fsm">14, 3, 1, 3</column>
<column name="ap_done_int">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter0">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="gmem_blk_n_R">9, 2, 1, 2</column>
<column name="k_fu_68">9, 2, 64, 128</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="NEURONS_MEM_addr_reg_302">4, 0, 4, 0</column>
<column name="NEURONS_MEM_addr_reg_302_pp0_iter1_reg">4, 0, 4, 0</column>
<column name="NEURONS_STATE_load_reg_336">1, 0, 1, 0</column>
<column name="WEIGHTS_load_reg_326">8, 0, 8, 0</column>
<column name="ap_CS_fsm">2, 0, 2, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter1_reg">1, 0, 1, 0</column>
<column name="gmem_addr_read_reg_331">32, 0, 32, 0</column>
<column name="icmp_ln23_reg_307">1, 0, 1, 0</column>
<column name="j_2_cast_reg_291">4, 0, 64, 60</column>
<column name="k_1_reg_296">64, 0, 64, 0</column>
<column name="k_1_reg_296_pp0_iter1_reg">64, 0, 64, 0</column>
<column name="k_fu_68">64, 0, 64, 0</column>
<column name="mul_ln31_reg_350">32, 0, 32, 0</column>
<column name="sext_ln23_1_cast_reg_281">64, 0, 64, 0</column>
<column name="sub_ln39_reg_311">4, 0, 4, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, RNI_Pipeline_WEIGHTS_LOOP, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, RNI_Pipeline_WEIGHTS_LOOP, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, RNI_Pipeline_WEIGHTS_LOOP, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, RNI_Pipeline_WEIGHTS_LOOP, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, RNI_Pipeline_WEIGHTS_LOOP, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, RNI_Pipeline_WEIGHTS_LOOP, return value</column>
<column name="sext_ln23">in, 32, ap_none, sext_ln23, scalar</column>
<column name="m_axi_gmem_AWVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWADDR">out, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLEN">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WDATA">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WSTRB">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WLAST">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARADDR">out, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLEN">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RDATA">in, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RLAST">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RFIFONUM">in, 9, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RUSER">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BUSER">in, 1, m_axi, gmem, pointer</column>
<column name="j_2">in, 4, ap_none, j_2, scalar</column>
<column name="sext_ln23_2">in, 62, ap_none, sext_ln23_2, scalar</column>
<column name="sext_ln23_1">in, 32, ap_none, sext_ln23_1, scalar</column>
<column name="cmp12">in, 1, ap_none, cmp12, scalar</column>
<column name="trunc_ln23_1">in, 4, ap_none, trunc_ln23_1, scalar</column>
<column name="trunc_ln2">in, 4, ap_none, trunc_ln2, scalar</column>
<column name="NEURONS_MEM_address0">out, 4, ap_memory, NEURONS_MEM, array</column>
<column name="NEURONS_MEM_ce0">out, 1, ap_memory, NEURONS_MEM, array</column>
<column name="NEURONS_MEM_we0">out, 1, ap_memory, NEURONS_MEM, array</column>
<column name="NEURONS_MEM_d0">out, 32, ap_memory, NEURONS_MEM, array</column>
<column name="NEURONS_MEM_q0">in, 32, ap_memory, NEURONS_MEM, array</column>
<column name="NEURONS_STATE_address0">out, 4, ap_memory, NEURONS_STATE, array</column>
<column name="NEURONS_STATE_ce0">out, 1, ap_memory, NEURONS_STATE, array</column>
<column name="NEURONS_STATE_q0">in, 1, ap_memory, NEURONS_STATE, array</column>
</table>
</item>
</section>
</profile>
